plot(h2, col = rgb(1, 0, 0, 1/4), xlim = c(-100, 100), add = TRUE)
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
legend(legend = c("Fisher Information", "Observed Fisher Information"))
h1 <- hist(samps[1,], breaks = 100)
h2 <- hist(samps[2,], breaks = 100)
plot(h2, col = rgb(1, 0, 0, 1/4), xlim = c(-100, 100), add = TRUE)
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
legend(x = "topright", legend = c("Fisher Information", "Observed Fisher Information"))
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = TRUE)
h1 <- hist(samps[1,], breaks = 100)
h2 <- hist(samps[2,], breaks = 100)
plot(h2, col = rgb(1, 0, 0, 1/4), xlim = c(-100, 100), add = TRUE)
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = TRUE)
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
col = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- hist(samps[1,], breaks = 100)
h2 <- hist(samps[2,], breaks = 100)
plot(h2, col = rgb(1, 0, 0, 1/4), xlim = c(-100, 100), add = TRUE)
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
col = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- hist(samps[1,], breaks = 100)
h2 <- hist(samps[2,], breaks = 100)
plot(h2, col = rgb(1, 0, 0, 1/4), xlim = c(-100, 100), add = TRUE)
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
col = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4)), fill = TRUE
)
plot_grid <- seq(0, 20, .1)
plot(plot_grid, sapply(plot_grid, function(x) exp(prof_log_lik(x)), type = 'l',
xlab = expression(psi), ylab = "Likelihood",
main = "Profile Likelihood")
)
sat <- data.frame(school = 1:8,
treat = c(28.39, 7.94, -2.75, 6.82, -.64, .63, 18.01, 12.16),
se = c(14.9, 10.2, 16.3, 11, 9.4, 11.4, 10.4, 17.6))
prof_log_lik <- function(psi) {
lambda <- sum(sat$treat / (sat$se ^ 2 + psi)) / sum(1 / (sat$se ^ 2 + psi))
-.5 * sum(log(sat$se ^ 2 + psi) + (sat$treat - lambda) ^ 2 / (sat$se ^ 2 + psi))
}
plot_grid <- seq(0, 20, .1)
plot(plot_grid, sapply(plot_grid, function(x) exp(prof_log_lik(x)), type = 'l',
xlab = expression(psi), ylab = "Likelihood",
main = "Profile Likelihood")
)
sat <- data.frame(school = 1:8,
treat = c(28.39, 7.94, -2.75, 6.82, -.64, .63, 18.01, 12.16),
se = c(14.9, 10.2, 16.3, 11, 9.4, 11.4, 10.4, 17.6))
prof_log_lik <- function(psi) {
lambda <- sum(sat$treat / (sat$se ^ 2 + psi)) / sum(1 / (sat$se ^ 2 + psi))
-.5 * sum(log(sat$se ^ 2 + psi) + (sat$treat - lambda) ^ 2 / (sat$se ^ 2 + psi))
}
plot_grid <- seq(0, 20, .1)
plot(plot_grid, sapply(plot_grid, function(x) exp(prof_log_lik(x))), type = 'l',
xlab = expression(psi), ylab = "Likelihood", main = "Profile Likelihood")
h1 <- hist(samps[1,], breaks = 100)
h2 <- hist(samps[2,], breaks = 100)
plot(h2, col = rgb(1, 0, 0, 1/4), xlim = c(-100, 100), add = TRUE)
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- hist(samps[1,], breaks = 50)
h2 <- hist(samps[2,], breaks = 50)
plot(h2, col = rgb(1, 0, 0, 1/4), xlim = c(-100, 100), add = TRUE)
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- hist(samps[1,], breaks = 50, plot = FALSE)
h2 <- hist(samps[2,], breaks = 50, plot = FALSE)
plot(h2, col = rgb(1, 0, 0, 1/4), xlim = c(-100, 100), add = TRUE)
h1 <- hist(samps[1,], breaks = 50, plot = FALSE)
h2 <- hist(samps[2,], breaks = 50, plot = FALSE)
plot(h2, col = rgb(1, 0, 0, 1/4), xlim = c(-100, 100))
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h1 <- density(samps[1,])
h2 <- density(samps[2,])
100, 100), main = )
plot(h2, col = rgb(1, 0, 0, 1/4), xlim = c(-100, 100), main = )
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, col = rgb(1, 0, 0, 1/4), xlim = c(-100, 100), main = "foo")
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), main = "foo")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .02), main = "foo")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .1), main = "foo")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .5), main = "foo")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .41), main = "foo")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "foo")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "foo")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste(hat(theta)))
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste(hat(theta))),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste("[nI(", hat(theta), ")", "^", "1/2(", hat(theta, "-", theta, ")"))),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste("[nI(", hat(theta), ")", "^", "1/2(", hat(theta), "-", theta, ")")),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste(sqrt("[nI(", hat(theta), ")"), "(", hat(theta), "-", theta, ")")),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste(sqrt("[", nI(hat(theta)), "]"), "(", hat(theta), "-", theta, ")")),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
n <- 7
S <- 1000
lr_stat <- replicate(n = S, {
x <- rnorm(n)
tstat <- sqrt(n) * mean(x) / sd(x)
W <- n * log(1 + tstat ^ 2 / (n - 1))
Wb <- W / (1 + 1.5 / n)
c(W, Wb)
})
grid <- seq(0, 15, .1)
hist(lr_stat[1,], breaks = 100, probability = TRUE)
lines(grid, dchisq(grid, df = 1))
hist(lr_stat[2,], breaks = 100, probability = TRUE)
lines(grid, dchisq(grid, df = 1))
n <- 7
S <- 1000
lr_stat <- replicate(n = S, {
x <- rnorm(n)
tstat <- sqrt(n) * mean(x) / sd(x)
W <- n * log(1 + tstat ^ 2 / (n - 1))
Wb <- W / (1 + 1.5 / n)
c(W, Wb)
})
grid <- seq(0, 15, .1)
h1 <- density(lr_stat[1,])
h2 <- density(lr_stat[2,])
plot(h2, main = "LR Stats")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
min(lr_stat)
hist(lr_stat[1,])
?density
h1 <- hist(lr_stat[1,])
h2 <- hist(lr_stat[2,])
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,])
h2 <- hist(lr_stat[2,])
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE)
h2 <- hist(lr_stat[2,], plot = FALSE)
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE)
h2 <- hist(lr_stat[2,], plot = FALSE)
plot(h1, col = rgb(0, 0, 1, 1/4))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 50)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 50)
plot(h1, col = rgb(0, 0, 1, 1/4))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 400))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
lines(grid, dchisq(grid, df = 1))
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
lines(grid, dchisq(grid, df = 1))
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100, probability = TRUE)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100, probability = TRUE)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
lines(grid, dchisq(grid, df = 1))
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100, probability = TRUE)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100, probability = TRUE)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
lines(grid, dchisq(grid, df = 1))
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100, freq = FALSE)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100, freq = FALSE)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
lines(grid, dchisq(grid, df = 1))
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350), freq = FALSE)
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE, freq = FALSE)
lines(grid, dchisq(grid, df = 1))
?hist
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100, probability = FALSE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350), probability = FALSE)
h1 <- hist(lr_stat[1,], breaks = 100, probability = FALSE)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE)
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
dchisq(0)
dchisq(0, df = 1)
dchisq(0.1, df = 1)
grid <- seq(0, 15, 0.01)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topleft",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topright",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
grid <- seq(0, 15, 0.01)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2), main = "Simulation")
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topright",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
grid <- seq(0, 15, 0.01)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2),
main = "Simulation", xlab = "x")
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topright",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
n <- 7
S <- 500
lr_stat <- replicate(n = S, {
x <- rnorm(n)
tstat <- sqrt(n) * mean(x) / sd(x)
W <- n * log(1 + tstat ^ 2 / (n - 1))
Wb <- W / (1 + 1.5 / n)
c(W, Wb)
})
grid <- seq(0, 15, 0.01)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2),
main = "Simulation", xlab = "x")
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topright",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
.05^2
1 / .0025
.5 * .5
(.5 * .5) / .0025
.05 / 1.96
(.05 / 1.96 )^(-2)
(.05 / 1.96 )^(-2) * .5^2
setwd("~/Documents/TAMU/stat_689-statcomp/project/stat-689-project")
gibbs <- function(init_param, ...) {
conditionals <- list(...)
for (f in conditionals)
print(f)
}
gibbs(0, list(function(x) x, function(y), y^2))
gibbs(0, list(function(x) {x}, function(y) y^2))
foo = list(1,2,3)
foo[[-1]]
foo[[-2]]
foo[-2
]
foo[-1]
flatten(foo[-1])
unliset(foo[-1])
unlist(foo[-1])
p = .15
ls()
dir()
nig_cond_mu <- function(x) {
function(params) {
rnorm(1, mean(x), params[1] / length(x))
}
}
nig_cond_sigma <- function(x) {
function(params) {
n <- length(x)
1 / rgamma(1, shape = (n - 1) / 2, .5 * sum((x - params[1]) ^ 2))
}
}
source("nig.R")
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
nig_conds <- list(nig_cond_mu(x), nig_cond_sigma(x))
nig_samples <- gibbs(c(3, 1), nig_conds)
nig_samples <- gibbs(c(3, 1), S, nig_conds)
S <- 5000
n <- 50
S <- 5000
x <- rnorm(n, 0, 5)
nig_conds <- list(nig_cond_mu(x), nig_cond_sigma(x))
nig_samples <- gibbs(c(3, 1), S, nig_conds)
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
nig_samples <- gibbs(c(3, 1), S, nig_conds)
debugSource('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
nig_samples <- gibbs(c(3, 1), S, nig_conds)
conditionals
conditionals[[1]]
conditionals[[2]]
conditionals[[1]]
conditionals[[1]][[1]]
conditionals
length(conditionals)
typeof(conditionals)
nig_samples <- gibbs(c(3, 1), S, nig_cond_mu(x), nig_cond_sigma(x))
conditionals[[1]]
conditionals[[2]]
cond
param_curr[-j]
cond(param_curr[-j])
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
nig_samples <- gibbs(c(3, 1), S, nig_cond_mu(x), nig_cond_sigma(x))
nig_samples[,1]
plot(nig_samples[,1])
plot(nig_samples[,2])
hist(nig_samples[,1])
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
hist(nig_samples[,2])
plot_grid <- seq(0, 50, .01)
hist(nig_samples[,2])
lines(dgamma(plot_grid), (n - 3) / 2, n * mean(x) ^ 2 / 2)
plot_grid <- seq(0, 50, .01)
hist(nig_samples[,2], probability = TRUE)
lines(dgamma(plot_grid, (n - 3) / 2, n * mean(x) ^ 2 / 2))
plot_grid <- seq(0, 50, .01)
hist(nig_samples[,2], probability = TRUE, breaks = 100)
lines(dgamma(plot_grid, (n - 3) / 2, n * mean(x) ^ 2 / 2))
plot_grid <- seq(0, 50, .01)
hist(nig_samples[,2], probability = TRUE, breaks = 100)
lines(1 / dgamma(plot_grid, (n - 3) / 2, n * mean(x) ^ 2 / 2))
install.packages("invgamma")
library(invgamma)
plot_grid <- seq(0, 50, .01)
hist(nig_samples[,2], probability = TRUE, breaks = 100)
lines(1 / dinvgamma(plot_grid, (n - 3) / 2, n * mean(x) ^ 2 / 2))
plot_grid <- seq(0, 50, .01)
hist(nig_samples[,2], probability = TRUE, breaks = 100)
lines(dinvgamma(plot_grid, (n - 3) / 2, n * mean(x) ^ 2 / 2))
hist(nig_samples[,1])
hist(nig_samples[,1], breaks = 100)
install.packages("rmarkdown")
git checkout test
279/500
p - .5
p = .5
(.558 - p) / sqrt(.5^2 / 500)
(.558 - p) / sqrt(p^2 / 500)
