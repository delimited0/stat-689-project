h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topright",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
n <- 7
S <- 500
lr_stat <- replicate(n = S, {
x <- rnorm(n)
tstat <- sqrt(n) * mean(x) / sd(x)
W <- n * log(1 + tstat ^ 2 / (n - 1))
Wb <- W / (1 + 1.5 / n)
c(W, Wb)
})
grid <- seq(0, 15, 0.01)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2),
main = "Simulation", xlab = "x")
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topright",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
rWishart(1, 4, diag(2))
rWishart(1, 4, diag(2))
rWishart(1, 4, diag(2))
rWishart(1, 1, diag(2))
rWishart(1, 4, diag(2))
rWishart(1, 4, diag(2))
a <- rgamma(1000, 2, 2)
b <- rWishart(1000, 3, diag(2))
b
b[, 1, 1]
b[1, 1, ]
b <- rWishart(1000, 2, diag(2))
summary(a)
summary(b)
b <- rWishart(1000, 4, diag(2))
summary(a)
summary(b)
b <- rWishart(1000, 3, diag(2))
summary(a)
summary(b)
a <- rgamma(1000, 2, 2)
b <- rWishart(1000, 2.5, diag(2))
summary(a)
summary(b)
a <- rgamma(1000, 2, 2)
b <- rWishart(1000, 1.5, diag(2))
summary(a)
summary(b)
b <- rWishart(1000, 1, diag(2))
b <- rWishart(1000, 2, diag(2))
summary(a)
summary(b)
knitr::opts_chunk$set(echo = TRUE)
set.seed(1287)
n <- 100
d <- 7
betastarm <- runif(d,min=0.25,max=1.75) sgn = 2*rbinom(d,1,0.5) - 1
set.seed(1287)
n <- 100
d <- 7
betastarm <- runif(d,min=0.25,max=1.75)
sgn <- 2*rbinom(d,1,0.5) - 1
betastar <- betastarm*sgn
X <- matrix(rnorm(n*d),nrow=n)
X[,3] <- sqrt(0.98)*X[,1] + sqrt(0.02)*X[,3] X[,4] = sqrt(0.95)*X[,1] +
set.seed(1287)
n <- 100
d <- 7
betastarm <- runif(d,min=0.25,max=1.75)
sgn <- 2*rbinom(d,1,0.5) - 1
betastar <- betastarm*sgn
X <- matrix(rnorm(n*d),nrow=n)
X[,3] <- sqrt(0.98)*X[,1] + sqrt(0.02)*X[,3]
X[,4] <- sqrt(0.95)*X[,1] + sqrt(0.05)*X[,4]
mustar <- X %*% betastar
sigstar <- 1.50
y <- mustar + sigstar * rt(n, df = 4)
betastarm
invgamma
library(invgamma)
X
betastar
rgamma(3, 1:3, 1:3)
rgamma(3, 1:3, 1:3)
rgamma(3, c(1, 10, 100), 1:3)
rgamma(3, c(1, 10, 100), 1:3)
rgamma(3, 1:3, 1:3)
shape
rate
rgamma(3, 1:3, 1)
rgamma(3, c(1, 10, 100), 1)
rgamma(3, c(1, 10, 100), 1)
a <- 2; b <- 2
library(mvtnorm)
y_lik <- function(xi, tau) {
M <- (X %*% t(X) / xi) + diag(1 / tau)
det(M) ^ (- 1 / 2) * ((b + t(y) %*% solve(M) %*% y) / 2) ^ (- (n + a) / 2)
}
sigma_xi <- 1
a <- 2; b <- 2
beta_samples <- matrix(NA, nrow = S, ncol = d)
S <- 10000
B <- 1000
a <- 2; b <- 2
beta_samples <- matrix(NA, nrow = S, ncol = d)
sigma_samples <- rep(NA, S)
xi_samples <- rep(NA, S)
tau_samples <- matrix(NA, nrow = S, ncol = n)
beta_samples[1, ] <- rep(1, d)
sigma_samples[1] <- 1
xi_samples[1] <- 1
tau_samples[1, ] <- rep(1, n)
y_lik <- function(xi, tau) {
M <- (X %*% t(X) / xi) + diag(1 / tau)
det(M) ^ (- 1 / 2) * ((b + t(y) %*% solve(M) %*% y) / 2) ^ (- (n + a) / 2)
}
sigma_xi <- 1
k <- 2
rate <- (y - X %*% beta_samples[k - 1, ] + 4 * sigma_samples[k]) /
(2 * sigma_samples[k])
tau_samples[k, ] <- rgamma(n, 5 / 2 , rate)
rate
beta_samples[k - 1, ]
y - X %*% beta_samples[k - 1, ]
4 * sigma_samples[k]
sigma_samples[k]
rate <- (y - X %*% beta_samples[k - 1, ] + 4 * sigma_samples[k - 1]) /
(2 * sigma_samples[k])
tau_samples[k, ] <- rgamma(n, 5 / 2 , rate)
rate
4 * sigma_samples[k - 1]
rate <- (y - X %*% beta_samples[k - 1, ] + 4 * sigma_samples[k - 1]) /
(2 * sigma_samples[k - 1])
rate
2 + 4 * sigma_samples[k - 1]) /
rate <- ((y - X %*% beta_samples[k - 1, ]) ^ 2 + 4 * sigma_samples[k - 1]) /
(2 * sigma_samples[k - 1])
rate
tau_samples[k, ] <- rgamma(n, 5 / 2 , rate)
tau_samples[k,]
rate <- tau_samples[k, ] %*% (y - X %*% beta_samples[k - 1, ]) +
xi_samples[k - 1] * (beta_samples[k - 1, ] %*% beta_samples[k - 1, ]) + b
rate
install.packages("mvnfast")
library(mvnfast)
?rmvn
nb_cond_mu <- function(y, X) {
ns <- table(y)
d <- ncol(X)
X_k_sum <- lapply(sort(unique(y)) + 1, function(k) colSums(X[y == k, ]))
function(params) {
sigmas <- params[["sigmas"]]
mapply(FUN = function(n, sig, X_sum) {
browser()
Q <- diag((1 + n / sig) ^ (-1), nrow = d, ncol = d)
b <- X_sum / sig
rmvn(Q %*% b, Q)
}, ns, sigmas, X_k_sum)
}
}
nb_cond_mu <- function(y, X) {
ns <- table(y)
d <- ncol(X)
X_k_sum <- lapply(sort(unique(y)) + 1, function(k) colSums(X[y == k, ]))
function(params) {
sigmas <- params[["sigmas"]]
mapply(FUN = function(n, sig, X_sum) {
browser()
Q <- diag((1 + n / sig) ^ (-1), nrow = d, ncol = d)
b <- X_sum / sig
rmvnorm(1, Q %*% b, Q)
}, ns, sigmas, X_k_sum)
}
}
setwd("~/Documents/TAMU/stat_689-statcomp/project/stat-689-project")
library(tidyverse)
mnist <- read_csv("mnist.csv")
)
foo <- nb_cond_mu(y, X)
y <- mnist$label
X <- as.matrix(mnist[, -1])
train_id <- sample(1:nrow(X), nrow(X) / 2, FALSE)
test_id <- (1:nrow(X))[-train_id]
foo <- nb_cond_mu(y, X)
foo(list(sigmas = 1:10))
foo(list(sigmas = 1:10))
Q %*% b
library(mvtnorm)
library(MCMCpack)
foo <- nb_cond_mu(y, X)
foo(list(sigmas = 1:10))
draw
draw <- foo(list(sigmas = 1:10))
nb_cond_mu <- function(y, X) {
ns <- table(y)
d <- ncol(X)
X_k_sum <- lapply(sort(unique(y)) + 1, function(k) colSums(X[y == k, ]))
function(params) {
sigmas <- params[["sigmas"]]
mapply(FUN = function(n, sig, X_sum) {
Q <- diag((1 + n / sig) ^ (-1), nrow = d, ncol = d)
b <- X_sum / sig
rmvnorm(1, Q %*% b, Q)
}, ns, sigmas, X_k_sum)
}
}
draw <- foo(list(sigmas = 1:10))
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
draw <- foo(list(sigmas = 1:10))
foo <- nb_cond_mu(y, X)
draw <- foo(list(sigmas = 1:10))
draw
library(mvnfast)
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
?rmvn
foo <- nb_cond_mu(y, X)
draw <- foo(list(sigmas = 1:10))
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
shape
rate
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
1:3 %*% 1:3
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
1 + 4 + 9
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
baz <- nb_cond_sigmas(y, X, 2, 2)
nb_cond_mu <- function(y, X) {
ns <- table(y)
d <- ncol(X)
X_k_sum <- lapply(sort(unique(y)) + 1, function(k) colSums(X[y == k, ]))
function(params) {
sigmas <- params[["sigmas"]]
mapply(FUN = function(n, sig, X_sum) {
Q <- diag((1 + n / sig) ^ (-1), nrow = d, ncol = d)
b <- X_sum / sig
rmvn(1, Q %*% b, Q)
}, ns, sigmas, X_k_sum, SIMPLIFY = FALSE)
}
}
foo <- nb_cond_mu(y, X)
draw <- foo(list(sigmas = 1:10))
draw[[1]]
draw2 <- baz(draw)
names(draw)
draw2 <- baz(list(mus = draw))
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
baz <- nb_cond_sigmas(y, X, 2, 2)
baz(list(mus = draw))
mu
mu %*% X_k_sum
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
baz <- nb_cond_sigmas(y, X, 2, 2)
draw2 <- baz(list(mus = draw))
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
nb_cond_sigmas <- function(y, X, a, b) {
ns <- table(y)
d <- ncol(X)
X_k_sum <- lapply(sort(unique(y)) + 1, function(k) colSums(X[y == k, ]))
X_k_norm <- lapply(sort(unique(y)) + 1, function(k) sum(X[y == k, ] ^ 2))
function(params) {
mus <- params[["mus"]]
mapply(function(n, mu, X_sum, X_norm) {
shape <- (n * d + a) / 2
# browser()
rate <- .5 * (X_norm - 2 * mu %*% X_sum + n * mu %*% t(mu))
1 / rgamma(1, shape, rate)
}, ns, mus, X_k_sum, X_k_norm)
}
}
baz <- nb_cond_sigmas(y, X, 2, 2)
draw2 <- baz(list(mus = draw))
draw2
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
baz <- nb_cond_sigmas(y, X, 2, 2)
draw2 <- baz(list(mus = draw))
draw2
?mvfast
is.vector(draw)
draw[[1]]
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
foo <- matrix(1, nrow = 3, ncol = 3)
foo''
foo
pmat <- array(NA, dim = c(iters + 1, nrow(p), ncol(p)))
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
nb_cond_sigmas <- function(y, X, a, b) {
ns <- table(y)
d <- ncol(X)
X_k_sum <- lapply(sort(unique(y)) + 1, function(k) colSums(X[y == k, ]))
X_k_norm <- lapply(sort(unique(y)) + 1, function(k) sum(X[y == k, ] ^ 2))
K <- length(unique(y))
function(params) {
mus <- params[["mus"]]
mapply(function(n, k, X_sum, X_norm) {
shape <- (n * d + a) / 2
# browser()
rate <- .5 * (X_norm - 2 * mus[k, ] %*% X_sum + n * mu[k, ] %*% t(mu[k, ]))
rinvgamma(1, shape, rate)
}, ns, 1:K, X_k_sum, X_k_norm)
}
}
foo <- nb_cond_mu(y, X)
draw <- foo(list(sigmas = 1:10))
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
K <- length(unique(y))
K
?gibbs
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
?gibbs
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, nrow(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
library("utility.R")
source("gibbs.R")
source("utility.R")
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, nrow(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, nrow(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, nrow(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
mus[, k]
mus[, k] %*% X_sum
mus[, k] %*% t(mus[, k])
mus[, k] %*% mus[, k]
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, nrow(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
rate
shape
rinvgamma(1, shape, rate)
sqrt(1746)
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/naive_bayes.R')
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, nrow(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
debugSource('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, nrow(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
debugSource('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
debugSource('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, nrow(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
param_curr[[1]]
param_curr[[2]]
dim(param_curr[[2]])
dim(param_curr[[3]])
param_curr[[3]]
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/gibbs.R')
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, nrow(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, nrow(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
p
dim(ph)
dim(p)
debugSource('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, nrow(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
p
dim(p)
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
nb_cond_mu(y, X),
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, ncol(X), K),
sigmas = rep(1, K)),
iters = 1000,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
nb_gibbs <- gibbs(param_init = list(pi = rep(.1, K),
mus = matrix(0, ncol(X), K),
sigmas = rep(1, K)),
iters = 10,
nb_cond_pi(y, .1),
nb_cond_mu(y, X),
nb_cond_sigmas(y, X, 2, 2))
nb_gibbs$samples$pi
nb_gibbs$samples$mus
dim(nb_gibbs$samples$mus)
nb_gibbs$samples$mus[10,]
nb_gibbs$samples$mus[10, ,]
image(nb_gibbs$samples$mus[10, ,], nrow = 28)
image(nb_gibbs$samples$mus[10, , 1], nrow = 28)
dim(nb_gibbs$samples$mus[10, , ])
dim(nb_gibbs$samples$mus[10, , 1])
nb_gibbs$samples$mus[10, , 1]
image(matrix(nb_gibbs$samples$mus[10, , 1], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 2], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 3], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 4], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 3], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 4], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 5], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 6], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 7], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 8], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 9], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 10], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 1], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 2], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 3], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 4], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 5], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 6], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 7], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 8], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 9], nrow = 28))
image(matrix(nb_gibbs$samples$mus[10, , 10], nrow = 28))
nb_gibbs$samples$sigmas
y
image(matrix(X[(y == 9)[1], ], nrow = 28))
(y == 9)[1]
which(y == 9)[1]
image(matrix(X[which(y == 9)[1], ], nrow = 28))
image(matrix(X[which(y == 9)[2], ], nrow = 28))
image(matrix(X[which(y == 9)[3], ], nrow = 28))
image(matrix(X[which(y == 9)[4], ], nrow = 28))
image(matrix(X[which(y == 0)[4], ], nrow = 28))
image(matrix(X[which(y == 0)[2], ], nrow = 28))
image(matrix(X[which(y == 1)[2], ], nrow = 28))
image(matrix(X[which(y == 2)[2], ], nrow = 28))
image(matrix(X[which(y == 2)[3], ], nrow = 28))
image(matrix(X[which(y == 2)[90], ], nrow = 28))
image(matrix(X[which(y == 2)[100], ], nrow = 28))
image(matrix(X[which(y == 2)[300], ], nrow = 28))
image(matrix(X[which(y == 2)[800], ], nrow = 28))
image(matrix(X[which(y == 3)[800], ], nrow = 28))
image(matrix(X[which(y == 3)[200], ], nrow = 28))
image(matrix(X[which(y == 3)[206], ], nrow = 28))
image(matrix(X[which(y == 4)[800], ], nrow = 28))
image(matrix(X[which(y == 4)[8003], ], nrow = 28))
image(matrix(X[which(y == 4)[3456], ], nrow = 28))
image(matrix(X[which(y == 4)[2456], ], nrow = 28))
image(matrix(X[which(y == 5)[2456], ], nrow = 28))
image(matrix(X[which(y == 8)[2456], ], nrow = 28))
image(matrix(X[which(y == 6)[2456], ], nrow = 28))
image(matrix(X[which(y == 7)[2456], ], nrow = 28))
image(matrix(X[which(y == 8)[2456], ], nrow = 28))
image(matrix(X[which(y == 0)[2456], ], nrow = 28))
image(matrix(X[which(y == 10)[2456], ], nrow = 28))
2200
