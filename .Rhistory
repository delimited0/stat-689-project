plot(h2, xlim = c(-100, 100), ylim = c(0, .41), main = "foo")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "foo")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "foo")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste(hat(theta)))
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste(hat(theta))),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste("[nI(", hat(theta), ")", "^", "1/2(", hat(theta, "-", theta, ")"))),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste("[nI(", hat(theta), ")", "^", "1/2(", hat(theta), "-", theta, ")")),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste(sqrt("[nI(", hat(theta), ")"), "(", hat(theta), "-", theta, ")")),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = expression(paste(sqrt("[", nI(hat(theta)), "]"), "(", hat(theta), "-", theta, ")")),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- density(samps[1,])
h2 <- density(samps[2,])
plot(h2, xlim = c(-100, 100), ylim = c(0, .4), main = "Sampling Distributions")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
n <- 7
S <- 1000
lr_stat <- replicate(n = S, {
x <- rnorm(n)
tstat <- sqrt(n) * mean(x) / sd(x)
W <- n * log(1 + tstat ^ 2 / (n - 1))
Wb <- W / (1 + 1.5 / n)
c(W, Wb)
})
grid <- seq(0, 15, .1)
hist(lr_stat[1,], breaks = 100, probability = TRUE)
lines(grid, dchisq(grid, df = 1))
hist(lr_stat[2,], breaks = 100, probability = TRUE)
lines(grid, dchisq(grid, df = 1))
n <- 7
S <- 1000
lr_stat <- replicate(n = S, {
x <- rnorm(n)
tstat <- sqrt(n) * mean(x) / sd(x)
W <- n * log(1 + tstat ^ 2 / (n - 1))
Wb <- W / (1 + 1.5 / n)
c(W, Wb)
})
grid <- seq(0, 15, .1)
h1 <- density(lr_stat[1,])
h2 <- density(lr_stat[2,])
plot(h2, main = "LR Stats")
polygon(h1, density = -1, col = rgb(0, 0, 1, 1/4))
polygon(h2, density = -1, col = rgb(1, 0, 0, 1/4))
min(lr_stat)
hist(lr_stat[1,])
?density
h1 <- hist(lr_stat[1,])
h2 <- hist(lr_stat[2,])
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,])
h2 <- hist(lr_stat[2,])
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE)
h2 <- hist(lr_stat[2,], plot = FALSE)
plot(h1, col = rgb(0, 0, 1, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE)
h2 <- hist(lr_stat[2,], plot = FALSE)
plot(h1, col = rgb(0, 0, 1, 1/4))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 50)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 50)
plot(h1, col = rgb(0, 0, 1, 1/4))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 400))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
lines(grid, dchisq(grid, df = 1))
legend(x = "topleft",
legend = c("Fisher Information", "Observed Fisher Information"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
lines(grid, dchisq(grid, df = 1))
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100, probability = TRUE)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100, probability = TRUE)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
lines(grid, dchisq(grid, df = 1))
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100, probability = TRUE)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100, probability = TRUE)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
lines(grid, dchisq(grid, df = 1))
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100, freq = FALSE)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100, freq = FALSE)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE)
lines(grid, dchisq(grid, df = 1))
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350), freq = FALSE)
plot(h2, col = rgb(1, 0, 0, 1/4), add = TRUE, freq = FALSE)
lines(grid, dchisq(grid, df = 1))
?hist
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100, probability = FALSE)
h1 <- hist(lr_stat[1,], plot = FALSE, breaks = 100)
h2 <- hist(lr_stat[2,], plot = FALSE, breaks = 100)
plot(h1, col = rgb(0, 0, 1, 1/4), ylim = c(0, 350), probability = FALSE)
h1 <- hist(lr_stat[1,], breaks = 100, probability = FALSE)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE)
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 350))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
dchisq(0)
dchisq(0, df = 1)
dchisq(0.1, df = 1)
grid <- seq(0, 15, 0.01)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topleft",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2))
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topright",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
grid <- seq(0, 15, 0.01)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2), main = "Simulation")
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topright",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
grid <- seq(0, 15, 0.01)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2),
main = "Simulation", xlab = "x")
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topright",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
n <- 7
S <- 500
lr_stat <- replicate(n = S, {
x <- rnorm(n)
tstat <- sqrt(n) * mean(x) / sd(x)
W <- n * log(1 + tstat ^ 2 / (n - 1))
Wb <- W / (1 + 1.5 / n)
c(W, Wb)
})
grid <- seq(0, 15, 0.01)
h1 <- hist(lr_stat[1,], breaks = 100, probability = TRUE,
col = rgb(0, 0, 1, 1/4), ylim = c(0, 2),
main = "Simulation", xlab = "x")
h2 <- hist(lr_stat[2,], breaks = 100, probability = TRUE, add = TRUE,
col = rgb(1, 0, 0, 1/4))
lines(grid, dchisq(grid, df = 1))
legend(x = "topright",
legend = c("LR Stat", "Bartlett Corrected Stat"),
fill = c(rgb(1, 0, 0, 1/4), rgb(0, 0, 1, 1/4))
)
setwd("~/Documents/TAMU/stat_689-statcomp/project/stat-689-project")
dir()
is.vector(diag(3))
is.vector(2
)
is.vector(1:3)
is.matrix()
is.matrix(diag(3))
is.matrix(1:3)
?array
make_history <- function(param_init, iters) {
# make sample history list
# param_init: list of initial parameters
# iters: number of sampling iterations
lapply(param_init, function(p) {
if (is.vector(p)) {
matrix(NA, nrow = iters + 1, ncol = length(p))
}
else if (is.matrix(p)) {
array(NA, dim = c(iters + 1, nrow(p), ncol(p)))
}
})
}
foo <- make_history(list(c(1,2), diag(2)))
foo <- make_history(list(c(1,2), diag(2)), 100)
foo[[1]]
make_history <- function(param_init, iters) {
# make sample history list
# param_init: list of initial parameters
# iters: number of sampling iterations
lapply(param_init, function(p) {
if (is.vector(p)) {
pmat <- matrix(NA, nrow = iters + 1, ncol = length(p))
pmat[1, ] <- p
}
else if (is.matrix(p)) {
parr <- array(NA, dim = c(iters + 1, nrow(p), ncol(p)))
parr[1, , ] <- p
}
})
}
foo <- make_history(list(c(1,2), diag(2)), 100)
foo[[1]]
foo <- make_history(list(1:2, diag(2)), 100)
foo[[1]]
make_history <- function(param_init, iters) {
# make sample history list
# param_init: list of initial parameters
# iters: number of sampling iterations
lapply(param_init, function(p) {
if (is.vector(p)) {
pmat <- matrix(NA, nrow = iters + 1, ncol = length(p))
pmat[1, ] <- p
}
else if (is.matrix(p)) {
pmat <- array(NA, dim = c(iters + 1, nrow(p), ncol(p)))
pmat[1, , ] <- p
}
return(pmat)
})
}
foo <- make_history(list(1:2, diag(2)), 100)
foo[[1]]
foo[[2]]
View(foo)
View(foo)
diag(2)
foo[[2]][1,,]
foo[[2]][2,,]
foo[[2]][3,,]
foo[[1]][1,]
save_sample <- function(param_history, param, n) {
# add sample to history
# arguments
# param_history: list of param histories
# param: list of new parameters
# n: iteration number
mapply(function(ph, p) {
if (is.vector(p)) ph[n, ] <- p
else if (is.matrix(p)) ph[n, , ] <- p
return(ph)
}, param_history, param)
}
foo <- make_history(list(1:2, diag(2)), 3)
foo
baz <- save_sample(foo, list(5:6, 3*diag(2)), 2)
baz
baz[[2]]
baz[[2]][1,,]
baz[[2]][2,,]
foo[[1]]
foo[[2]]
list(1:3)
list(1,2)
0 * list(1,2)
rep(NA, 1:2)
rep(NA, length(p))
rep(NA, length(1:2))
rep(NA, length(diag(2)))
vector(mode = "list", length(1:3))
make_mom_history <- function(param_init, iters) {
lapply(param_init, function(p) {
if (is.vector(p)) {
pmat <- matrix(NA, nrow = iters + 1, ncol = length(p))
}
else if (is.matrix(p)) {
pmat <- array(NA, dim = c(iters + 1, nrow(p), ncol(p)))
}
return(pmat)
})
)
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
knitr::opts_chunk$set(echo = TRUE)
nn_lik <- nn_likelihood(x)
source("normal-normal.R")
n <- 100
S <- 5000
x <- rnorm(n, 0, 1)
nn_lik <- nn_likelihood(x)
nn_p <- nn_prior()
nn_prop <- nn_proposal(.5)
nn_prop_d <- nn_prop_density()
nn_prop()
nn_prop(1)
nn_prop(1)
nn_prop(1)
debugSource('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
source("utility.R")
nn_lik <- nn_likelihood(x)
nn_p <- nn_prior()
nn_prop <- nn_proposal(.5)
nn_prop_d <- nn_prop_density()
nn_samples <- metropolis_hastings(init_param = 3,
likelihood = nn_lik,
prior = nn_p,
proposal = nn_prop,
prop_density = nn_prop_d,
iters = S)
source("metropolis_hastings.R")
nn_samples <- metropolis_hastings(init_param = 3,
likelihood = nn_lik,
prior = nn_p,
proposal = nn_prop,
prop_density = nn_prop_d,
iters = S)
nn_samples <- metropolis_hastings(param_init = list(3),
likelihood = nn_lik,
prior = nn_p,
proposal = nn_prop,
prop_density = nn_prop_d,
iters = S)
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
nn_samples <- metropolis_hastings(param_init = list(3),
likelihood = nn_lik,
prior = nn_p,
proposal = nn_prop,
prop_density = nn_prop_d,
iters = S)
nn_samples <- metropolis_hastings(param_init = list(3),
likelihood = nn_lik,
prior = nn_p,
proposal = nn_prop,
prop_density = nn_prop_d,
iters = S)
ph
param_history
param
param_history[[1]]
param_history[[1]][1,]
param_history[[1]][1,,]
param_history[[1]][1,]
param_history[[1]][2,]
parma
param
ph <- param_history[[1]]
p <- param[[1]]
is.vector(p)
is.matrix(p)
ph[n,]
ph[n,] <- p
ph
ph <- param_history[[1]]
p <- param[[]]
p <- param[[1]]
ph[n,]
ph
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
nn_samples <- metropolis_hastings(param_init = list(3),
likelihood = nn_lik,
prior = nn_p,
proposal = nn_prop,
prop_density = nn_prop_d,
iters = S)
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
nn_samples <- metropolis_hastings(param_init = list(3),
likelihood = nn_lik,
prior = nn_p,
proposal = nn_prop,
prop_density = nn_prop_d,
iters = S)
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/utility.R')
nn_samples <- metropolis_hastings(param_init = list(3),
likelihood = nn_lik,
prior = nn_p,
proposal = nn_prop,
prop_density = nn_prop_d,
iters = S)
nn_samples$samples
hist(nn_samples$samples[101:S,], probability = TRUE,
main = "MH vs Analytical Posterior", xlab = "x", breaks = 25)
nn_samples$samples
hist(nn_samples$samples[101:S], probability = TRUE,
main = "MH vs Analytical Posterior", xlab = "x", breaks = 25)
nn_samples$samples[101:S]
nn_samples$samples[[1]]
hist(nn_samples$samples[[1]][101:S, ], probability = TRUE,
main = "MH vs Analytical Posterior", xlab = "x", breaks = 25)
plot_grid <- seq(-.5, .5, .01)
lines(plot_grid, dnorm(plot_grid, mean(x), sqrt(1 / n)))
hist(nn_samples$samples[[1]][101:S, ], probability = TRUE,
main = "MH vs Analytical Posterior", xlab = "x", breaks = 25)
plot_grid <- seq(-.5, .5, .01)
lines(plot_grid, dnorm(plot_grid, mean(x), sqrt(1 / n)))
source('~/Documents/TAMU/stat_689-statcomp/project/stat-689-project/hmc.R')
library(mvtnorm)
dmvnorm(c(0, 0), list(1, 2))
dmvnorm(c(0, 0), mean = list(1, 2))
dmvnorm(c(0, 0), c(1, 2))
dmvnorm(diag(2), mean = c(1, 1), cov = diag(2)))
dmvnorm(diag(2), mean = c(1, 1), cov = diag(2))
dmvnorm(diag(2), mean = c(1, 1), sigma =  = diag(2))
dmvnorm(diag(2), mean = c(1, 1), sigma = diag(2))
diag(2)
